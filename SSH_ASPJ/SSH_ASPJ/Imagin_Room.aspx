<%@ Page Title="" Language="C#" MasterPageFile="~/Site.Master" AutoEventWireup="true" CodeBehind="Imagin_Room.aspx.cs" Inherits="Imagin2.Imagin_Room" %>
<asp:Content ID="Content1" ContentPlaceHolderID="MainContent" runat="server">
    <style>
        #sketchpad {
            float: left;
            height: 300px;
            width: 400px;
            border: 2px solid #888;
            border-radius: 4px;
            position: relative; /* Necessary for correct mouse co-ords in Firefox */
        }

        .rightside {
            float: left;
            margin-left: 10px;
        }

        h1 {
            text-align:center
        }
        .container{
            list-style-type: none;
            width: 1235px;
        }
        #discussion{
            list-style-type: none;
        }
        #discussionDiv{
            overflow: auto;
            width: 362px;
            height: 263px;
            margin-left: 436px;
        }
        #sendmessage{
            position: relative;
            top: 50px;
            left: 226px;
            height: 23px;
        }

    </style>

    <h1 style="height: 42px; font-size:large"><%:Title%></h1>

    <div>
    <asp:Label ID="Label1" runat="server"></asp:Label>
    </div>

    <br />

    <br />
    
    <div>
    <asp:Label ID="Label2" runat="server"></asp:Label>
    </div>

    <br />

    <br />

    
<%--    <asp:Button ID="saveButton" runat="server" Text="saveButton" OnClientClick="javascript:hi();"/>--%>

    <a id="download">Download as image</a>

    <asp:HiddenField ID="HiddenField1" runat="server" />

    <asp:HiddenField ID="HiddenField2" runat="server" />

    <div>
    <asp:DropDownList ID="color" runat="server" onchange="getColor();">
            <asp:ListItem Value="black">Black</asp:ListItem>
            <asp:ListItem Value="red">Red</asp:ListItem>
            <asp:ListItem Value="orange">Orange</asp:ListItem>
            <asp:ListItem Value="yellow">Yellow</asp:ListItem>
            <asp:ListItem Value="green">Green</asp:ListItem>
            <asp:ListItem Value="blue">Blue</asp:ListItem>
            <asp:ListItem Value="purple">Purple</asp:ListItem>
            <asp:ListItem Value="brown">Brown</asp:ListItem>
            <asp:ListItem Value="grey">Grey</asp:ListItem>
            <asp:ListItem Value="White">Eraser</asp:ListItem>
        </asp:DropDownList>
    
        <asp:DropDownList ID="size" runat="server" onchange="getSize();">
            <asp:ListItem Value=5>5</asp:ListItem>
            <asp:ListItem Value=10>10</asp:ListItem>
            <asp:ListItem Value=20>20</asp:ListItem>
            <asp:ListItem Value=30>30</asp:ListItem>
            <asp:ListItem Value=40>40</asp:ListItem>
        </asp:DropDownList>

    </div>
    
    <br />

    <div id="sketchpadapp">
        <div class="rightside">
            <canvas id="sketchpad" height="300"
                    width="400"></canvas>
        </div>

    <div id="discussionDiv">
        <ul id="discussion">
        </ul>
    </div>

    <div class="container">
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
        <input type="hidden" id="groupname" />
        <asp:TextBox ID="message" runat="server" style="position:relative; top: 49px; left: -37px; height: 23px;"></asp:TextBox>
    </div>

    </div>

    <script src="Scripts/jquery-1.10.2.min.js" ></script>
    <!--Reference the SignalR library. -->
    <script src="Scripts/jquery.signalR-2.2.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="signalr/hubs"></script>
    <!--Add script to update the page and send messages.--> 
    <script type="text/javascript">
        $(function () {
            var uname = $("#<%= HiddenField1.ClientID %>").val();
            var roomCode = $("#<%= HiddenField2.ClientID %>").val();
            // Declare a proxy to reference the hub. 
            var chat = $.connection.chatHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.broadcastMessage = function (name, message) {
                // Html encode display name and message. 
                var encodedName = $('<div />').text(name).html();
                var encodedMsg = $('<div />').text(message).html();
                // Add the message to the page. 
                $('#discussionDiv').append('<li><strong>' + encodedName
                    + '</strong>:&nbsp;&nbsp;' + encodedMsg + '</li>');
            };
            // Set initial focus to message input box.  
            $('#<%=message.ClientID %>').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    chat.server.joinRoom(roomCode);
                    // Call the Send method on the hub. 
                    chat.server.send(roomCode, uname, $('#<%=message.ClientID %>').val());
                    // Clear text box and reset focus for next comment. 
                    $('#<%=message.ClientID %>').val('').focus();
                });
            });
        });
    </script>


    <script src="Scripts/jquery-1.10.2.min.js"></script>
    <script src="Scripts/jquery.signalR-2.2.1.js"></script>
    <script src="/signalr/hubs"></script>
    <script type="text/javascript">

        var ink = "black";
        var size = 5;
        var isDown = false;
        var lastX, lastY = 0;

        var roomCode = $("#<%= HiddenField2.ClientID %>").val();

        // Variables for referencing the canvas and 2dcanvas context
        var canvas, ctx;

        var array =  new Array();

        function getColor() {
            var gc = document.getElementById("MainContent_color");
            ink = gc.value;
        }

        function getSize() {
            var gs = document.getElementById("MainContent_size");
            size = gs.value;
        }
        
        $(function () {
            
            // Variables to keep track of the mouse position and left-button status
            var mouseX, mouseY, mouseDown = 0;
            
            init();

            //Create the SignalR Connection
            var DOT = $.connection.drawDot;
            //Start the SignalR hub
            $.connection.hub.start().done(function () {
                DOT.server.join(roomCode);
            });
            //Function called from DrawDot Server
            DOT.client.updateDot = function (x, y, ink, size) {
                drawDot(x, y, ink, size);
            };

            function drawDot(x, y, ink, size) {
                // Draw a filled circle
                ctx.beginPath();
                ctx.arc(x, y, size, 0, Math.PI * 2, true);
                ctx.fillStyle = ink;
                ctx.closePath();
                ctx.fill();
            }
            // Clear the canvas context using the canvas width and height
            function cleanCanvas() {
                clearCanvas();
                DOT.server.clearCanvas();
            }
            function clearCanvas() {
                ctx.clearRect(0, 0, canvas.width, canvas.height);
            }
            // Keep track of the mouse button being pressed and draw a dot at current location
            function sketchpad_mouseDown() {
                mouseDown = 1;
                drawDot(mouseX, mouseY, ink, size);
                DOT.server.updateCanvas(roomCode, mouseX, mouseY, ink, size);
            }
            // Keep track of the mouse button being released
            function sketchpad_mouseUp() {
                mouseDown = 0;
            }
            // Keep track of the mouse position and draw a dot if mouse button is currently pressed
            function sketchpad_mouseMove(e) {
                // Update the mouse co-ordinates when moved
                getMousePos(e);
                // Draw a dot if the mouse button is currently being pressed
                if (mouseDown == 1) {
                    drawDot(mouseX, mouseY, ink, size);
                    DOT.server.updateCanvas(roomCode, mouseX, mouseY, ink, size);
                }
            }
            // Get the current mouse position relative to the top-left of the canvas
            function getMousePos(e) {
                if (!e)
                    var e = event;
                if (e.offsetX) {
                    mouseX = e.offsetX;
                    mouseY = e.offsetY;
                }
                else if (e.layerX) {
                    mouseX = e.layerX;
                    mouseY = e.layerY;
                }
            }
            // Set-up the canvas and add our event handlers after the page has loaded
            function init() {
                // Get the specific canvas element from the HTML document
                canvas = document.getElementById('sketchpad');
                // If the browser supports the canvas tag, get the 2d drawing context for this canvas
                if (canvas.getContext)
                    ctx = canvas.getContext('2d');
                // Check that we have a valid context to draw on/with before adding event handlers
                if (ctx) {
                    // React to mouse events on the canvas, and mouseup on the entire document
                    canvas.addEventListener('mousedown', sketchpad_mouseDown, false);
                    canvas.addEventListener('mousemove', sketchpad_mouseMove, false);
                    window.addEventListener('mouseup', sketchpad_mouseUp, false);
                }
                else {
                    document.write("Browser not supported!!");
                }
            }

            
        })
        
    </script>

    <script type="text/javascript">
        function downloadCanvas(link, canvasId, filename) {
            link.href = document.getElementById(canvasId).toDataURL();
            link.download = filename;
        }

        document.getElementById('download').addEventListener('click', function() {
            downloadCanvas(this, 'sketchpad', 'test.png');
        }, false);
    </script>
</asp:Content>
